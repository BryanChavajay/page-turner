"""Initial Data Base

Revision ID: 5f1f0ac16c95
Revises: 
Create Date: 2025-09-30 22:33:08.888671

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5f1f0ac16c95'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('session_version', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id_user'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('book',
    sa.Column('id_book', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('genre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('reading_start', sa.DateTime(), nullable=True),
    sa.Column('reading_end', sa.DateTime(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.PrimaryKeyConstraint('id_book')
    )
    op.create_index(op.f('ix_book_deleted'), 'book', ['deleted'], unique=False)
    op.create_index(op.f('ix_book_id_book'), 'book', ['id_book'], unique=False)
    op.create_table('notification',
    sa.Column('id_notification', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('time_to_notify', sa.Time(), nullable=False),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.PrimaryKeyConstraint('id_notification')
    )
    op.create_index(op.f('ix_notification_id_user'), 'notification', ['id_user'], unique=False)
    op.create_table('refreshtoken',
    sa.Column('hash_token', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.PrimaryKeyConstraint('hash_token')
    )
    op.create_index(op.f('ix_refreshtoken_id_user'), 'refreshtoken', ['id_user'], unique=False)
    op.create_table('bookdescription',
    sa.Column('id_book_description', sa.Integer(), nullable=False),
    sa.Column('id_book', sa.Integer(), nullable=False),
    sa.Column('markdown_content', sqlmodel.sql.sqltypes.AutoString(length=1024), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_book'], ['book.id_book'], ),
    sa.PrimaryKeyConstraint('id_book_description')
    )
    op.create_index(op.f('ix_bookdescription_id_book'), 'bookdescription', ['id_book'], unique=True)
    op.create_table('quote',
    sa.Column('id_quote', sa.Integer(), nullable=False),
    sa.Column('id_book', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('quote_text', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_book'], ['book.id_book'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.PrimaryKeyConstraint('id_quote')
    )
    op.create_index(op.f('ix_quote_id_book'), 'quote', ['id_book'], unique=False)
    op.create_index(op.f('ix_quote_id_user'), 'quote', ['id_user'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quote_id_user'), table_name='quote')
    op.drop_index(op.f('ix_quote_id_book'), table_name='quote')
    op.drop_table('quote')
    op.drop_index(op.f('ix_bookdescription_id_book'), table_name='bookdescription')
    op.drop_table('bookdescription')
    op.drop_index(op.f('ix_refreshtoken_id_user'), table_name='refreshtoken')
    op.drop_table('refreshtoken')
    op.drop_index(op.f('ix_notification_id_user'), table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_book_id_book'), table_name='book')
    op.drop_index(op.f('ix_book_deleted'), table_name='book')
    op.drop_table('book')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
